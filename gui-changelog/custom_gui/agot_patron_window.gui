types PatronWindow {
	type agot_patron_tab_button = button_tab {
		layoutpolicy_horizontal = expanding
		onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'patron' )]"
		down = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'patron' )]"
		visible = "[GetScriptedGui('religion_has_patron_gods').IsShown(GuiScope.SetRoot(FaithWindow.GetFaith.MakeScope).End)]"
		text = "FAITH_PATRON"
		default_format = "#low"

		using = tooltip_below
	}

	type patron_menu = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding

		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content"
			{
				vbox = {
					spacing = 10
					margin_bottom = 30
					margin_top = 5
					layoutpolicy_horizontal = expanding

					## Faith of the Seven

					datamodel = "[GetPlayer.MakeScope.GetList('patron_gods')]"

					item = {
						vbox = {
							vbox = {
								margin_bottom = 8
								margin_top = 0
								patron_selection = {
									datacontext = "[GetScriptedGui('choose_patron_generic')]"
									datacontext = "[GetModifier(Concatenate('patron_', Concatenate(Scope.GetFlagName ,'_modifier')))]"
								}
							}

							divider_light = {
								layoutpolicy_horizontal = expanding
							}
						}
					}
				}
			}
			patron_select_confirm = { }
		}
	}

	type patron_selection = widget {
		name = "patron_view"
		widgetid = "patron_view"
		size = { 760 130 }

		margin_widget = {
			size = { 100% 100% }
			margin = { 3 3 }

			block "vignette"
			{
				icon = {
					name = "vignette"
					size = { 100% 100% }
					alpha = 0.2
					texture = "gfx/interface/component_masks/mask_vignette.dds"
					color = { 0.15 0.15 0.15 1 }
				}
			}
		}

		background = {
			visible = "[EqualTo_string(GetPlayer.MakeScope.Var('patron_god').GetFlagName, Scope.GetFlagName)]"
			size = { 100% 100% }
			margin_top = -20
			texture = "gfx/interface/component_masks/mask_fade_circle.dds"
			gfxtype = icongfx
			spriteType = Corneredstretched
			spriteborder = { 20 -100 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			color = { 1.0 1.0 0.9 0.4 }
		}

		button_standard = {
			size = { 760 130 }
			enabled = "[Or(EqualTo_string(GetPlayer.MakeScope.Var('patron_god').GetFlagName, Scope.GetFlagName), ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('faith', FaithWindow.GetFaith.MakeScope).End))]"
			modify_texture = {
				name = "overlay"
				texture = "gfx/interface/buttons/button_standard_overlay.dds"
				spriteType = Corneredstretched
				spriteborder = { 3 3 }
				blend_mode = overlay
			}

			tooltip = PATRON_SELECTION_TOOLTIP
			tooltip_visible = "[Not(EqualTo_string(GetPlayer.MakeScope.Var('patron_god').GetFlagName, Scope.GetFlagName))]"

			onclick = "[GetVariableSystem.Set('selected_patron', Scope.GetFlagName)]"
			onclick = "[GetVariableSystem.Set('show_patron_select_confirm', 'true')]"
			#onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'patron_name', MakeScopeFlag( GetVariableSystem.Get( 'selected_patron' ))).End )]"

			hbox = {
				icon = { # Standard
					visible = "[GetScriptedGui('has_this_patron_god').IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'patron_name', MakeScopeFlag( Scope.GetFlagName)).End)]"
					size = { 130 130 }
					texture = "[GetCultureInnovationType(Concatenate(Scope.GetFlagName, '_patron_icon')).GetIcon]"
					using = Mask_Rough_Edges
					alpha = 0.75
				}
				icon = { # PATRON_ICON_DARK
					visible = "[Not(GetScriptedGui('has_this_patron_god').IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'patron_name', MakeScopeFlag(Scope.GetFlagName)).End))]"
					#visible = "[Or(Not(GetScriptedGui('has_this_patron_god').IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'patron_name', MakeScopeFlag(Scope.GetFlagName)).End)),Not(ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).End)))]"
					size = { 130 130 }
					texture = "[GetCultureInnovationType(Concatenate(Scope.GetFlagName, '_patron_icon')).GetIcon]"
					using = Mask_Rough_Edges
					alpha = 0.75
					modify_texture = {
						texture = "gfx/interface/colors/black.dds"
						blend_mode = normal
						alpha = 0.65
					}
					modify_texture = {
						visible = "[Or(Not(GetScriptedGui('has_this_patron_god').IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'patron_name', MakeScopeFlag(Scope.GetFlagName)).End)),Not(ScriptedGui.IsValid(GuiScope.SetRoot( GetPlayer.MakeScope ).End)))]"
						texture = "gfx/interface/colors/grey.dds"
						blend_mode = normal
						alpha = 0.25
					}
				}
				widget = {
					size = { 300 130 }
					vbox = {
						widget = { # Patron name text
							size = { 300 26 }

							text_single = {
								default_format = "#clickable"
								block "choose_patron_text" {
									text = "[Localize(Concatenate('patron_god_', Scope.GetFlagName))]"
								}
							}

							background = {
								size = { 0 0 }
								margin_left = 20
								#margin_right = 20
								alpha = 0.7

								texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
								spriteType = Corneredtiled
								spriteborder = { 40 8 }
								texture_density = 2
							}
						}

						widget = {
							size = { 300 60 }

							text_multi = { # Desc not highlighted
								size = { 300 60 }
								visible = "[Not(And(GetVariableSystem.HasValue( 'show_patron_modifiers', StaticModifier.GetName ), ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)))]"
								parentanchor = left
								default_format = "#low"
								block "flavor_text" {
									text = "[Localize( Concatenate( 'patron_god_desc_', Scope.GetFlagName ))]"
								}
								autoresize = yes
								fontsize = 13
								max_width = 280
							}
							text_multi = { # Desc highlighted
								size = { 300 60 }
								visible = "[EqualTo_string( GetPlayer.MakeScope.Var( 'patron_god' ).GetFlagName, Scope.GetFlagName )]"
								parentanchor = left
								default_format = "#high"
								block "flavor_text" {
									text = "[Localize( Concatenate( 'patron_god_desc_', Scope.GetFlagName ))]"
								}
								autoresize = yes
								fontsize = 13
								max_width = 280
							}
						}
						expand = {}
					}
				}

				widget = {
					size = { 330 130 }

					vbox = {
						widget = { # Patron name text
							size = { 330 26 }

							text_single = {
								default_format = "#clickable"
								raw_text = PATRON_SELECTION_MODIFIERS
							}

							background = {
								size = { 0 0 }
								margin_left = 20
								alpha = 0.7

								texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
								spriteType = Corneredtiled
								spriteborder = { 40 8 }
								texture_density = 2
							}
						}

						widget = {
							size = { 330 114 }

							text_single = { # Show modifiers
								max_width = 330
								fontsize = 13
								default_format = "#high"
								text = "[StaticModifier.GetDescWithEffects]"
							}
						}
					}
				}
				expand = {}
			}
		}
	}

	type patron_select_confirm = widget {
		name = "patron_select_confirm"

		visible = "[And(GetVariableSystem.HasValue('show_patron_select_confirm','true'), Not(EqualTo_string(GetPlayer.MakeScope.Var('patron_god').GetFlagName,GetVariableSystem.Get('selected_patron'))))]"

		datacontext = "[GetVariableSystem]"
		datacontext = "[GetScriptedGui('choose_patron_generic')]"

		allow_outside = yes
		position = { 0 -60 }
		parentanchor = center
		size = { 80% 43% }
		using = Window_Background
		using = Window_Decoration_Spike

		# if need to be a modal can be enable by uncommenting the line below
		#modal = yes
		#modality = all

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
		}
		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		vbox = {
			using = Window_Margins

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Set('show_patron_select_confirm', 'false')]"
				}

				blockoverride "header_text"
				{
					text = "[Localize(Concatenate('patron_god_', GetVariableSystem.Get('selected_patron')))]"
				}
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				text_multi = {
					autoresize = yes
					using = Font_Size_Medium
					text = "[Concatenate(Concatenate(Localize('select_patron_confirm_text_1'), Localize(Concatenate('patron_god_', GetVariableSystem.Get('selected_patron')))), Localize('select_patron_confirm_text_2'))]"
				}
				text_multi = {
					autoresize = yes
					using = Font_Size_Medium
					text = "[GetModifier(Concatenate('patron_', Concatenate(GetVariableSystem.Get('selected_patron') ,'_modifier'))).GetDescWithEffects]"
				}
				text_multi = {
					autoresize = yes
					text = PATRON_SELECTION_TOOLTIP
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					button_primary_big = {
						text = patron_select_confirm
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('patron_name', MakeScopeFlag(GetVariableSystem.Get('selected_patron'))).End )]"
						onclick = "[GetVariableSystem.Set('show_patron_select_confirm', 'false')]"
					}
				}
			}
		}
	}

	### For character window
	type character_subheading_patron_button = widget {
		name = "character_subheading_patron_type"
		size = { 30 30 }
		#layoutpolicy_horizontal = expanding
		#parentanchor = left
		#margin = { 3 0 }
		#spacing = 2

		vbox = {
			container = {
				button_standard_hover = {
					layoutpolicy_horizontal = expanding
					size = { 30 30 }
					onclick = "[GetVariableSystem.Set( 'faith_view_tabs', 'patron' )]"
					onclick = "[OpenGameViewData( 'faith', GetPlayer.GetFaith.GetID )]"
					onclick = "[GetScriptedGui('get_patron_god_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('faith', FaithWindow.GetFaith.MakeScope).End)]"
					default_format = "#clickable;italic"
					align = left|nobaseline
					margin_left = 5

					modify_texture = {
						name = "overlay"
						texture = "gfx/interface/buttons/button_standard_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 3 3 }
						blend_mode = overlay
					}

					tooltipwidget = {
						patron_tooltip = {}
					}
				}

				icon = {
					size = { 30 30 }
					parentanchor = vcenter|hcenter
					fontsize = 25
					raw_text = PATRON_CHARACTER_ICON
					using = Mask_Rough_Edges
					alpha = 0.5
				}
			}
		}

		expand = {}
	}

	type patron_tooltip = widget {
		alwaystransparent = no
		using = GeneralTooltipSetup
		widget = {
			name = "background"
			using = DefaultTooltipBackground
			size = { 100% 100% }
			alwaystransparent = no
		}
		vbox = {
			set_parent_size_to_minimum = yes
			margin = { 12 8 }
			margin_bottom = 16
			spacing = 4

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin = { 0 4 }

				background = {
					name = "header"
					texture = "gfx/interface/component_tiles/tile_title_big_top_01.dds"
					spriteType = Corneredstretched
					texture_density = 2
					margin = { 15 0 }

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_title_big_top.dds"
						spriteType = Corneredstretched
						spriteborder = { 160 0 }
						blend_mode = alphamultiply
						alpha = 0.5
					}

					modify_texture = {
						name = "overlay"
						texture = "gfx/interface/component_overlay/overlay_title_big_top.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					vbox = {
						layoutpolicy_vertical = expanding
						text_single = {
							layoutpolicy_horizontal = expanding
							name = "header"
							text = "[Localize(Concatenate('patron_god_', Character.MakeScope.Var('patron_god').GetFlagName))]"
							visible = "[Character.MakeScope.Var('patron_god').IsSet]"
							align = top
							using = Font_Type_Flavor
							using = Font_Size_Big
						}
						expand = {
							layoutpolicy_vertical = growing
						}
					}
					vbox = {
						layoutpolicy_vertical = expanding
						text_single = {
							layoutpolicy_horizontal = expanding
							name = "header"
							text = "NO_PATRON"
							visible = "[Not(Character.MakeScope.Var('patron_god').IsSet)]"
							align = top
							using = Font_Type_Flavor
							using = Font_Size_Big
						}
						expand = {
							layoutpolicy_vertical = growing
						}
					}
					expand = {
						layoutpolicy_horizontal = growing
					}
				}
			}
		}
	}

	type window_faith_patron_tab = vbox {
		name = "tab_patron"
		visible = "[GetVariableSystem.HasValue( 'faith_view_tabs', 'patron' )]"
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		datacontext = "[GetIllustration( 'religion_holding' )]"

		blockoverride "scrollbox_background" {}
		blockoverride "scrollbox_background_fade" {}

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			on_start = "[GetScriptedGui('get_patron_god_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('faith', FaithWindow.GetFaith.MakeScope).End)]"
		}

		state = {
			name = _hide
			alpha = 0
			on_start = "[GetScriptedGui('clear_patron_god_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
		}

		background = {
			texture = "[Illustration.GetTexture( FaithWindow.GetFaith.MakeScope )]"
			alpha = 0.5
			fittype = end

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
				blend_mode = alphamultiply
			}
		}

		patron_menu = {}
	}

	type hbox_character_subheading = widget {
		name = "patron_deity_character_window"
		size = { 30 30 }
		layoutpolicy_horizontal = expanding
		parentanchor = left

		character_subheading_patron_button = {}

		# # Extra Icon - purpose TBD
		# vbox = {
		# 	button_standard_hover = {
		# 		layoutpolicy_horizontal = expanding
		# 		size = { 30 30 }
		# 		onclick = "[]"
		# 		default_format = "#clickable;italic"
		# 		align = left|nobaseline
		# 		margin_left = 5

		# 		visible = no

		# 		icon = {
		# 			name = "dread_icon"
		# 			size = { 30 30 }
		# 			texture = "gfx/interface/icons/icon_dread.dds"
		# 		}

		# 		tooltipwidget = { }
		# 	}
		# }

		# # Extra Icon - purpose TBD
		# vbox = {
		# 	button_standard_hover = {
		# 		layoutpolicy_horizontal = expanding
		# 		size = { 30 30 }
		# 		onclick = "[]"
		# 		default_format = "#clickable;italic"
		# 		align = left|nobaseline
		# 		margin_left = 5

		# 		visible = no

		# 		icon = {
		# 			name = "dread_icon"
		# 			size = { 30 30 }
		# 			texture = "gfx/interface/icons/icon_dread.dds"
		# 		}

		# 		tooltipwidget = { }
		# 	}
		# }
	}
}